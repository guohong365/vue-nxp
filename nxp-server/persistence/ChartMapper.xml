<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uc.app.zjjh.persistence.ChartMapper">
<resultMap type="com.uc.app.zjjh.domain.chart.GeoFeatureScalar"	id="geoFeature">
		<result column="GROUP_ID" jdbcType="INTEGER" property="groupId" />
		<result column="CATEGORY" jdbcType="VARCHAR" property="category" />
		<result column="VALUE" jdbcType="DECIMAL" property="value" />
		<result column="PLACE_HOLDER" jdbcType="INTEGER" property="placeHolder" />
	</resultMap>
	<resultMap type="com.uc.web.domain.CodeImpl" id="codes">
	<id column="CODE" jdbcType="INTEGER" property="code"/>
	<result column="VALUE" jdbcType="VARCHAR" property="value"/>
	<result column="VALID" jdbcType="BIT" property="valid"/>
	</resultMap>
	
	<select id="selectLocationHasData" resultType="java.lang.Long">
	  select distinct<choose><when test="city == null">b.CITY</when><otherwise>b.AREA</otherwise></choose> 
	  from t4_objects a 
	  left join t4_org b on b.ID = a.SITE
	  <if test="city!=null">
	  left join t4_c_area c on c.ID = b.CITY
	  where substring(c.CODE,1,6) = #{city, jdbcType=VARCHAR}
	  </if>	  
	</select>
	<select id="selectSimpleLocationNames" resultMap="geoFeature" parameterType="map">
    select a.ID as GROUP_ID,
    <choose>
    <when test="city == null"> 
     if(a.VALUE='西双版纳傣族自治州', '西双版纳', 
       if(char_length(a.ID) &lt; 4, a.VALUE, 
          CONCAT(substring(a.VALUE, 1, 2), substring(a.VALUE, -1, 1)))) as CATEGORY,
     </when>
     <otherwise>
     if(a.VALUE='香格里拉市', '香格里拉',if(char_length(a.VALUE)&lt;=4, a.VALUE,
         CONCAT(substring(a.VALUE, 1, 2), substring(a.VALUE, -1, 1)))) as CATEGORY,
     </otherwise>
     </choose>      
     substring(a.CODE, 1, 6) as VALUE
     from t4_c_area a
     <choose>     
     <when test="city==null">where a.TYPE = 'CITY'</when>
     <otherwise>
     left join t4_c_area b on b.ID = a.PARENT
     where
     a.TYPE= 'COUNTY'
     and substring(b.CODE, 1, 6) = #{city, jdbcType=VARCHAR}
     </otherwise>
     </choose>
  </select>
  <select id="selectObjectsCount" resultMap="geoFeature" parameterType="map">
     <include refid="selectObjectsCountByGroupSex_0" />
     union all 
     (select GROUP_ID, t2.VALUE as CATEGORY, sum(t1.VALUE) as VALUE
      from (<include refid="selectObjectsCountByGroupCityCounty_1" />) t1
      <choose>
      <when test="city==null">
      left join t4_c_area t2 on t2.ID=t1.CITY
      group by t1.CITY      
      </when>
      <otherwise>
      left join t4_c_area t2 on t2.ID=t1.COUNTY
      left join t4_c_area t3 on t3.ID = t2.PARENT
      where substring(t3.CODE,1,6)= #{city,jdbcType=VARCHAR}
      group by t1.COUNTY 
      </otherwise>      
      </choose>
      order by t2.CODE limit 10000)
  </select>
  <select id="selectObjectsCountByGroupSex" resultMap="geoFeature" parameterType="map">
    select t1.GROUP_ID, t2.VALUE as CATEGORY, sum(t1.VALUE) as VALUE
    from ( 
       <include refid="selectObjectMalesCountByGroupCityCounty_2" />
       union all
       <include refid="selectObjectFemalesCountByGroupCityCounty_3" />
      
       ) t1 
    <choose>
    <when test="city==null">   
    left join t4_c_area t2 on t2.ID = t1.CITY
    group by t1.GROUP_ID, t1.CITY
    </when>
    <otherwise>
    left join t4_c_area t2 on t2.ID = t1.COUNTY
    left join t4_c_area t3 on t3.ID = t2.PARENT and substring(t3.CODE,1,6)=#{city, jdbcType=VARCHAR}
    where t3.ID is not null
    <if test="locations!=null and !locations.empty">
    and t2.ID in (<foreach collection="locations" item="location" separator=",">#{location, jdbcType=INTEGER}</foreach>)
    </if>
    group by t1.GROUP_ID, t1.COUNTY    
    </otherwise>
    </choose>
    order by t1.GROUP_ID, t2.CODE limit 10000
  </select>
  <select id="selectObjectsCountByGroupAge" resultMap="geoFeature" parameterType="map">
  select u1.GROUP_ID, u2.VALUE as CATEGORY, sum(u1.VALUE) as VALUE
  from (
    <foreach collection="groups" item="group" separator="union all">
    (select (${group} + 1) as GROUP_ID, t1.PARENT as CITY, t1.ID as COUNTY, IFNULL(t2.VALUE, 0) as VALUE
    from t4_c_area t1
    left join (<include refid="selectObjectsByGroupAge_1_5" />) t2 on t2.COUNTY=t1.ID and t2.GROUP_ID = ${group})
    </foreach>
  ) u1  
  <choose>
  <when test="city==null">
    left join t4_c_area u2 on u2.ID = u1.CITY    
    <if test="locations!=null and !locations.empty">
    where u2.ID in (<foreach collection="locations" item="location" separator=",">#{location,jdbcType=INTEGER}</foreach>)
    </if>
    group by u1.GROUP_ID, u1.CITY
  </when>  
  <otherwise>
    left join t4_c_area u2 on u2.ID = u1.COUNTY
    left join t4_c_area u3 on u3.ID = u2.PARENT
    where substring(u3.CODE,1,6)=#{city,jdbcType=VARCHAR}
    <if test="locations!=null and !locations.empty">
    and u2.ID in (<foreach collection="locations" item="location" separator=",">#{location,jdbcType=INTEGER}</foreach>)
    group by u1.GROUP_ID, u1.COUNTY
    </if>
  </otherwise>
  </choose>
  order by GROUP_ID, u2.CODE limit 10000
  </select>
 
  <sql id="selectObjectsByGroupAge_1_5">  
    (select (CASE WHEN ((a.BIRTHDAY + INTERVAL 18 YEAR) &gt;= current_date()) THEN 1
            WHEN ((a.BIRTHDAY + INTERVAL 25 YEAR) &gt;= current_date()) THEN 2
            WHEN ((a.BIRTHDAY + INTERVAL 35 YEAR) &gt;= current_date()) THEN 3
            WHEN ((a.BIRTHDAY + INTERVAL 45 YEAR) &gt;= current_date()) THEN 4
            ELSE 5 END) AS GROUP_ID, b.CITY, b.AREA as COUNTY, count(*) as VALUE 
    from t4_objects a
    left join t4_org b on b.ID = a.SITE
    group by b.CITY, b.AREA, GROUP_ID)
  </sql>
  
	<sql id="selectObjectsCountByGroupSex_0">
		(select 0 as GROUP_ID, a.SEX as CATEGORY, count(*) as VALUE
		from t4_objects a
		<if test="city !=null ">
      left join t4_org b on b.ID = a.SITE
      left join t4_c_area c on c.ID = b.CITY
      where substring(c.CODE, 1, 6)= #{city, jdbcType=VARCHAR}
    </if>  
    group by a.SEX
    order by a.SEX limit 10)
  </sql>
	<sql id="selectObjectsCountByGroupCityCounty_1">
  (select 1 as GROUP_ID, b.CITY as CITY, b.AREA as COUNTY, count(*) as VALUE
    from t4_objects a
    left join t4_org b on b.ID = a.SITE  
    group by CITY, COUNTY)
  </sql>  
	<sql id="selectObjectMalesCountByGroupCityCounty_2">
		(select 2 as GROUP_ID, a.PARENT as CITY, a.ID as COUNTY, IFNULL(b.VALUE, 0) as VALUE
		from t4_c_area a 
		left join
		   (select t2.CITY, t2.AREA, count(*) as VALUE 
		   from t4_objects t1
		   left join t4_org t2 on t2.ID = t1.SITE
		   where t1.SEX='男'
		   group by t2.CITY, t2.AREA) b on b.CITY=a.PARENT and b.AREA=a.ID
		where a.TYPE = 'COUNTY')
	</sql>	
	<sql id="selectObjectFemalesCountByGroupCityCounty_3">
    (select 3 as GROUP_ID, a.PARENT as CITY, a.ID as COUNTY, IFNULL(b.VALUE, 0) as VALUE
    from t4_c_area a 
    left join
       (select t2.CITY, t2.AREA, t1.SEX, count(*) as VALUE 
       from t4_objects t1
       left join t4_org t2 on t2.ID = t1.SITE
       where t1.SEX ='女'
       group by t2.CITY, t2.AREA) b on b.CITY=a.PARENT and b.AREA=a.ID
    where a.TYPE = 'COUNTY')
  </sql>
  
	<select id="selectSitesCount" resultMap="geoFeature" parameterType="map">	
	(select 1 as GROUP_ID, b.VALUE as CATEGORY, count(*) as VALUE
		from t4_org a
		<choose>
		<when test="city==null">
		left join t4_c_area b on b.ID= a.CITY 
    where a.TYPE = '交换点' and a.VALID 
    and exists(select 1 from t4_objects where SITE = a.ID)
    group by a.CITY)    
		</when>
		<otherwise>
		left join t4_c_area b on b.ID = a.AREA
		left join t4_c_area c on c.ID = b.PARENT
    where a.TYPE = '交换点' and a.VALID 
    and exists(select 1 from t4_objects where SITE = a.ID)
    and substring(c.CODE,1,6)=#{city,jdbcType=VARCHAR}
    group by a.AREA)
		</otherwise>
		</choose>
		order by b.CODE
	</select>
	
	<select id="selectEmployeeCount" resultMap="geoFeature" parameterType="map">
		select 1 as GROUP_ID, c.VALUE as CATEGORY, count(*) as VALUE
		from t4_employee a
		left join t4_org b on b.ID = a.SITE
		<choose>
		<when test="city==null">
		left join t4_c_area c on c.ID = b.CITY
		where a.LEAVE_DATE is null
		group by b.CITY
		</when>
		<otherwise>
    left join t4_c_area c on c.ID = b.AREA
    left join t4_c_area d on d.ID = c.PARENT
    where a.LEAVE_DATE is null
    and substring(d.CODE,1,6)=#{city,jdbcType=VARCHAR}
    group by b.AREA    
		</otherwise>
		</choose>		
    order by c.CODE		
	</select>

	 <select id="selectMinDate" resultType="java.util.Date" parameterType="map">
    select MIN(a.SERVICE_DATE) from t4_work_record a
    <if test="city != null">
      left join t4_objects b on b.ID = a.OBJECT_ID
      left join t4_org c on c.ID = b.SITE
      left join t4_c_area d on d.ID = c.CITY
      where d.ID is not null and substring(d.CODE,1,6)=#{city,jdbcType=VARCHAR}
    </if>
  </select>
     <select id="selectMaxDate" resultType="java.util.Date" parameterType="map">
    select MAX(a.SERVICE_DATE) from t4_work_record a
    <if test="city != null">
      left join t4_objects b on b.ID = a.OBJECT_ID
      left join t4_org c on c.ID = b.SITE
      left join t4_c_area d on d.ID = c.CITY
      where d.ID is not null and substring(d.CODE,1,6)=#{city,jdbcType=VARCHAR}
    </if>
  </select>

 <sql id="selectSqlGroupByCity">
  select 
  a.ID as GROUP_ID,
  a.VALUE as LOCATION,  
  count(d.ID) as SERVICE_TIMES,
  count(distinct c.ID, if(d.ID is not null, 1, null)) as SERVICE_PERSON,
  sum(IFNULL(d.TRANS_MMT,0)) + sum(IFNULL(d.TRANS_VCT, 0)) as TRANS_TIMES,
  count(distinct c.ID, if(d.TRANS_MMT or d.TRANS_VCT, 1, null)) as TRANS_PERSON,
  count(distinct c.ID, if((c.POSITIVE and d.ID is not null) or 
      exists(
         select 1 from t4_work_record s 
         where s.OBJECT_ID=c.ID
         <if test="dateFrom != null"> 
         and s.SERVICE_DATE &lt; #{dateFrom, jdbcType=DATE}
         </if> 
         and s.TRANS_VCT 
         and s.HIV_RESULT &lt;&gt; '阴性') , 1, null)) as POSITIVE,
  count(distinct c.ID, if(c.POSITIVE and d.ID is not null, 1, null)) as ORIGINAL_POSITIVE,       
  count(distinct c.ID, if(d.HIV_RESULT &lt;&gt; '阴性', 1, null)) as HIV_NEW_CASES,
  count(distinct c.ID, if(d.TRANS_VCT, 1, null)) as HIV_EXAMINED,
  count(if(d.TRANS_MMT, 1, null)) as TRANS_MMT,
  count(distinct c.ID, if(b.HAS_MMT and d.ID is not null, 1, null)) as TRANS_MMT_BASE
  from t4_c_area a
  left join t4_org b on b.CITY = a.ID and b.VALID and b.TYPE='交换点'
  left join t4_objects c on c.SITE = b.ID
  left join t4_work_record d on d.OBJECT_ID = c.ID
    <if test="dateFrom != null"> 
      and d.SERVICE_DATE &gt;= #{dateFrom, jdbcType=DATE}
    </if>   
    <if test="dateTo != null">
      and d.SERVICE_DATE &lt;= #{dateTo, jdbcType=DATE}
    </if>  
  where
  a.TYPE='CITY'
  group by a.ID
</sql>
 <sql id="selectSqlGroupByCounty">
  select 
  a.ID as GROUP_ID,
  a.VALUE as LOCATION,  
  count(d.ID) as SERVICE_TIMES,
  count(distinct c.ID, if(d.ID is not null, 1, null)) as SERVICE_PERSON,
  sum(IFNULL(d.TRANS_MMT,0)) + sum(IFNULL(d.TRANS_VCT, 0)) as TRANS_TIMES,
  count(distinct c.ID, if(d.TRANS_MMT or d.TRANS_VCT, 1, null)) as TRANS_PERSON,
  count(distinct c.ID, if((c.POSITIVE and d.ID is not null) or 
      exists(
         select 1 from t4_work_record s 
         where s.OBJECT_ID=c.ID
         <if test="dateFrom != null"> 
         and s.SERVICE_DATE &lt; #{dateFrom, jdbcType=DATE}
         </if> 
         and s.TRANS_VCT 
         and s.HIV_RESULT &lt;&gt; '阴性') , 1, null)) as POSITIVE,
  count(distinct c.ID, if(c.POSITIVE and d.ID is not null, 1, null)) as ORIGINAL_POSITIVE,       
  count(distinct c.ID, if(d.HIV_RESULT &lt;&gt; '阴性', 1, null)) as HIV_NEW_CASES,
  count(distinct c.ID, if(d.TRANS_VCT, 1, null)) as HIV_EXAMINED,
  count(if(d.TRANS_MMT, 1, null)) as TRANS_MMT,
  count(distinct c.ID, if(b.HAS_MMT and d.ID is not null, 1, null)) as TRANS_MMT_BASE
  from t4_c_area a
  left join t4_org b on b.AREA = a.ID and b.VALID and b.TYPE='交换点' 
  left join t4_objects c on c.SITE = b.ID
  left join t4_work_record d on d.OBJECT_ID = c.ID
     <if test="dateFrom != null"> 
       and d.SERVICE_DATE &gt;= #{dateFrom, jdbcType=DATE}
     </if>   
     <if test="dateTo != null">
       and d.SERVICE_DATE &lt;= #{dateTo, jdbcType=DATE}
     </if>  
  where
  a.TYPE='COUNTY'
  and a.ID in (<foreach collection="locations" item="location" separator=",">${location.GroupId}</foreach>)
  group by a.ID
</sql>

<select id="selectHIVExamineRate" resultMap="geoFeature" parameterType="map">
  select
    t.GROUP_ID as GROUP_ID,
    t.LOCATION as CATEGORY,
    if(t.SERVICE_PERSON - t.POSITIVE=0, null, t.HIV_EXAMINED/(t.SERVICE_PERSON - t.POSITIVE)) as VALUE
  from (
  <if test="city!=null"><include refid="selectSqlGroupByCounty" /></if>  
  <if test="city==null"><include refid="selectSqlGroupByCity" /></if>
  ) t 
     
</select>

<select id="selectMMTTransRate" resultMap="geoFeature" parameterType="map">
  select
    t.GROUP_ID as GROUP_ID,    
    t.LOCATION as CATEGORY,
    if(t.TRANS_MMT_BASE=0, null, t.TRANS_MMT/t.TRANS_MMT_BASE) as VALUE
  from (
  <if test="city!=null"><include refid="selectSqlGroupByCounty" /></if>  
  <if test="city==null"><include refid="selectSqlGroupByCity" /></if>
  ) t 
</select>
<select id="selectHIVExamineRateLines" resultMap="geoFeature" parameterType="map">
  select
    t.GROUP_ID as GROUP_ID,
    t.LOCATION as CATEGORY,
    if(t.SERVICE_PERSON - t.POSITIVE=0, null, t.HIV_EXAMINED/(t.SERVICE_PERSON - t.POSITIVE)) as VALUE
  from (
  <foreach collection="dateTos" item="dateTo" separator="union">
    (<if test="city!=null"><include refid="selectSqlGroupByCounty" /></if>  
    <if test="city==null"><include refid="selectSqlGroupByCity" /></if>)
  </foreach>
    ) t 
</select>
<select id="selectMMTTransRateLines" resultMap="geoFeature" parameterType="map">
  select
    t.GROUP_ID as GROUP_ID,
    t.LOCATION as CATEGORY,
    if(t.SERVICE_PERSON - t.POSITIVE=0, null, t.HIV_EXAMINED/(t.SERVICE_PERSON - t.POSITIVE)) as VALUE
  from (
    <foreach collection="dateTos" item="dateTo" separator="union">
    (<if test="city!=null"><include refid="selectSqlGroupByCounty" /></if>  
    <if test="city==null"><include refid="selectSqlGroupByCity" /></if>)
  ) t 
   
  
  </foreach>

</select>
	
</mapper>